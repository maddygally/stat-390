---
title: "Presentation 1"
author: Ally Bardas, Emma Drisko, Madelyn Gallagher, Diego Goldfrank, Andrew Luke
format: html
editor: visual
---

# What we have so far

![](photos/Screenshot%202024-10-03%20at%203.26.37%20PM.png){width="393"}

Here, we manually identified the hexcodes for the stroma, and input them to QuPath so it would recognize the stroma as that shade of light pink.

![](photos/Screenshot%202024-10-03%20at%203.44.54%20PM.png){width="397"}

Here, we estimated stain vectors, based on a selected square of the provided image. QuPath automatically creates subplots containing each pixel, showing the relationship for each RGB relationship in each pixel. Along the end, QuPath created stain vectors, and used that to identify melanocytes

![](photos/Screenshot%202024-10-03%20at%203.51.39%20PM.png){width="461"}

Here, we ran QuPath to automatically detect cells, in this case melanocytes.

![](photos/Screenshot%202024-10-03%20at%204.04.32%20PM.png){width="475"}

Here, the melanocyte can be identified manually, we later coded to identify them automatically, and did so across many images:

## Low-Grade C-MIL using H&E

![](photos/Low Grade H&E.png){width="523"}

## High-Grade C-MIL using H&E

![](photos/High Grade H&E.png){width="551"}

## Benign using H&E

![](photos/Benign H&E.png)

## High-Grade C-MIL - Melan-A

![](photos/High-Grade Melan-A.jpeg){width="482"}

## Low-Grade C-MIL - Melan-A

![](photos/Low-Grade Melan-A.jpeg){width="474"}

## Benign -Melan-A

![](photos/Benign Melan-A.jpeg){width="448"}

Andrew and Emma worked on the code below, as well as some data cleaning that is not included . They went for a preliminary approach using R, while we played with QuPath

```{r}
#| eval: false

# Load necessary library
library(magick)

# Define the target RGB values and the tolerance
target_rgb <- c(r = 0.651, g = 0.701, b = 0.29)
tolerance <- 0.05

# Define the function to check if a color is close to the target
is_close <- function(color) {
  all(abs(color - target_rgb) <= tolerance)
}

# Load the image
image_path <- "path/to/your/image.jpg"  # Replace with your image path
image <- image_read(image_path)

# Convert the image to a pixel matrix
image_matrix <- as.integer(image_data(image))

# Initialize a mask for the pixels that are close to the target color
mask <- matrix(FALSE, nrow = dim(image_matrix)[1], ncol = dim(image_matrix)[2])

# Iterate over each pixel and check if it's close to the target RGB
for (i in 1:dim(image_matrix)[1]) {
  for (j in 1:dim(image_matrix)[2]) {
    pixel_rgb <- image_matrix[i, j, 1:3] / 255  # Normalize to [0, 1]
    if (is_close(pixel_rgb)) {
      mask[i, j] <- TRUE
    }
  }
}

# Create a new image based on the mask
output_image <- image
output_image[!mask] <- "white"  # Set non-matching pixels to white (or any other color)

# Save or display the output image
image_write(output_image, "output_image.jpg")  # Save the output
print(output_image)  # Display the output image
```

# Going forward

We brainstormed a few ideas for next steps:

-   Identify the border of each melanocyte and classify the thickness or presence of it's white outline

-   Identify the concentration of melanocytes in a given area away from the edge of the epithelium.

-   Code the epithelium into quarters and see how many melanocytes have traveled away from the stroma

    -   In better words, the concentration of melanocytes in each quarter.
